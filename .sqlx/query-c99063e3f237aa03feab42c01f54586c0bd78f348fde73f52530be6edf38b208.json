{
  "db_name": "PostgreSQL",
  "query": "\n                    WITH base_search AS (\n                        SELECT\n                            u.id,\n                            u.username,\n                            u.email,\n                            r.role_name,\n                            -- Calculate similarity score for ranking\n                            similarity(u.username || ' ' || u.email, $3) AS sim_score\n                        FROM users u\n                        JOIN roles r ON u.role_id = r.id\n                        WHERE\n                            -- ILIKE for substring matches\n                            (u.username ILIKE '%' || $3 || '%')\n                            OR\n                            (u.email ILIKE '%' || $3 || '%')\n                                -- fuzzy match trigram filtering\n                            OR\n                            (\n                                (u.username || ' ' || u.email) % $3\n                                AND\n                                similarity(u.username || ' ' || u.email, $3) >= $4\n                            )\n                    ),\n                    ranked_results AS (\n                        SELECT\n                            *,\n                            CASE\n                                WHEN username ILIKE $3 OR email ILIKE $3 THEN 10\n                                WHEN username ILIKE '%' || $3 || '%' OR email ILIKE '%' || $3 || '%' THEN 8\n                                -- WHEN user_tsv @@ to_tsquery('simple', $4) THEN 8\n                                ELSE 6\n                            END as search_rank\n                        FROM base_search\n                     ),\n                    total_count AS (\n                        SELECT COUNT(*) AS total FROM ranked_results\n                    )\n                    SELECT\n                        rr.id,\n                        rr.username,\n                        rr.email,\n                        rr.role_name,\n                        tc.total as total_items\n                    FROM ranked_results rr\n                    CROSS JOIN total_count tc\n                    -- Order by the best rank, then by similarity, then by ID for stable sorting\n                    ORDER BY rr.search_rank DESC, rr.sim_score DESC, rr.id ASC\n                    LIMIT $1\n                    OFFSET $2\n                    ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "username",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "email",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "role_name",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "total_items",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "Int8",
        "Text",
        "Float4"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      null
    ]
  },
  "hash": "c99063e3f237aa03feab42c01f54586c0bd78f348fde73f52530be6edf38b208"
}
